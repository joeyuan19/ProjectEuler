#!/bin/sh

# 76.py
# ProjectEuler
#
# Created by joe yuan on 10/3/11.
# Copyright 2011 Classified. All rights reserved.


# s(n) = g(n)  + f(n)
# s(n) = (n-1) +

# 1: s(1) = 0
# g(1) = 0
# f(1) = 0

# 2: s(2) = 1
# g(2) = 1
# [1,1]
# f(2) = 0


# 3: s(3) = 2
# g(3) = 2
# [1,1,1]
# [2,1]
# f(3) = 0
#

# 4: s(4) = 4
# g(n) = 3
# [1,1,1,1]
# [2,1,1,0]
# [3,1,0,0]
# f(4) = 1
# [2,2,0,0]

# 5: s(5) = 6
# n-1
# [1,1,1,1,1]
# [2,1,1,1,0]
# [3,1,1,0,0]
# [4,1,0,0,0]
# f(5) = 2
# [2,2,1,0,0]
# [3,2,0,0,0]

# 6: s(6) = 10
# g(6) = 5
# [1,1,1,1,1,1]
# [2,1,1,1,1,0]
# [3,1,1,1,0,0]
# [4,1,1,0,0,0]
# [5,1,0,0,0,0]
# f(6) = 5
# [2,2,2,0,0,0]
# [2,2,1,1,0,0]
# [3,2,1,0,0,0]
# [3,3,0,0,0,0]
# [4,2,0,0,0,0]

# 7: s(7) = 15
# g(7) = 6
# [1,1,1,1,1,1,1]
# [2,1,1,1,1,1,0]
# [3,1,1,1,1,0,0] 
# [4,1,1,1,0,0,0]
# [5,1,1,0,0,0,0]
# [6,1,0,0,0,0,0]
# f(7) = 7
# [2,2,2,1,0,0,0]
# [3,2,1,1,0,0,0]
# [4,2,1,0,0,0,0]
# [3,3,1,0,0,0,0]
# [3,2,2,0,0,0,0]
# [5,2,0,0,0,0,0]
# [4,3,0,0,0,0,0]

# 8: s(8) = 21
# g(8) = 7
# [1,1,1,1,1,1,1,1]
# [2,1,1,1,1,1,1,0]
# [3,1,1,1,1,1,0,0] 
# [4,1,1,1,1,0,0,0]
# [5,1,1,1,0,0,0,0]
# [6,1,1,0,0,0,0,0]
# [7,1,0,0,0,0,0,0]
# f(8) = 14
# [2,2,1,1,1,1,0,0]

# [3,2,1,1,1,0,0,0]
# [2,2,2,1,1,0,0,0]

# [4,2,1,1,0,0,0,0] 
# [3,3,1,1,0,0,0,0]
# [3,2,2,1,0,0,0,0]
# [2,2,2,2,0,0,0,0]

# [5,2,1,0,0,0,0,0]
# [4,3,1,0,0,0,0,0]
# [4,2,2,0,0,0,0,0]
# [3,3,2,0,0,0,0,0]

# [6,2,0,0,0,0,0,0]
# [5,3,0,0,0,0,0,0]
# [4,4,0,0,0,0,0,0]

# 9: s(9) = 28
# g(9) = 8
# [1,1,1,1,1,1,1,1,1]
# [2,1,1,1,1,1,1,1,0]
# [3,1,1,1,1,1,1,0,0]
# [4,1,1,1,1,1,0,0,0]
# [5,1,1,1,1,0,0,0,0]
# [6,1,1,1,0,0,0,0,0]
# [7,1,1,0,0,0,0,0,0]
# [8,1,0,0,0,0,0,0,0]
# f(9) = 20
# [2,2,1,1,1,1,1,0,0]
# [3,2,1,1,1,1,0,0,0]
# [2,2,2,1,1,1,0,0,0]
# [4,2,1,1,1,0,0,0,0]
# [3,3,1,1,1,0,0,0,0]
# [3,2,2,1,1,0,0,0,0]
# [2,2,2,2,1,0,0,0,0]
# [5,2,1,1,0,0,0,0,0]
# [4,3,1,1,0,0,0,0,0]
# [4,2,2,1,0,0,0,0,0]
# [3,3,2,1,0,0,0,0,0]
# [3,2,2,2,0,0,0,0,0]
# [6,2,1,0,0,0,0,0,0]
# [5,3,1,0,0,0,0,0,0]
# [5,2,2,0,0,0,0,0,0]
# [4,3,2,0,0,0,0,0,0]
# [3,3,3,0,0,0,0,0,0]
# [7,2,0,0,0,0,0,0,0]
# [6,3,0,0,0,0,0,0,0]
# [5,4,0,0,0,0,0,0,0]

# 10: s(10) = 40
# g(10) = 9
# [1,1,1,1,1,1,1,1,1,1]
# [2,1,1,1,1,1,1,1,1,0]
# [3,1,1,1,1,1,1,1,0,0]
# [4,1,1,1,1,1,1,0,0,0]
# [5,1,1,1,1,1,0,0,0,0]
# [6,1,1,1,1,0,0,0,0,0]
# [7,1,1,1,0,0,0,0,0,0]
# [8,1,1,0,0,0,0,0,0,0]
# [9,1,0,0,0,0,0,0,0,0]
# f(10) = 31
# [2,2,1,1,1,1,1,1,0,0]
# [3,2,1,1,1,1,1,0,0,0]
# [2,2,2,1,1,1,1,0,0,0]
# [4,2,1,1,1,1,0,0,0,0]
# [3,3,1,1,1,1,0,0,0,0]
# [3,2,2,1,1,1,0,0,0,0]
# [2,2,2,2,1,1,0,0,0,0]
# [5,2,1,1,1,0,0,0,0,0]
# [4,3,1,1,1,0,0,0,0,0]
# [4,2,2,1,1,0,0,0,0,0]
# [3,3,2,1,1,0,0,0,0,0]
# [3,2,2,2,1,0,0,0,0,0]
# [2,2,2,2,2,0,0,0,0,0]
# [6,2,1,1,0,0,0,0,0,0]
# [5,3,1,1,0,0,0,0,0,0]
# [5,2,2,1,0,0,0,0,0,0]
# [4,3,2,1,0,0,0,0,0,0]
# [4,2,2,2,0,0,0,0,0,0]
# [3,3,3,1,0,0,0,0,0,0]
# [3,3,2,2,0,0,0,0,0,0]
# [7,2,1,0,0,0,0,0,0,0]
# [6,3,1,0,0,0,0,0,0,0]
# [6,2,2,0,0,0,0,0,0,0]
# [5,4,1,0,0,0,0,0,0,0]
# [5,3,2,0,0,0,0,0,0,0]
# [4,4,2,0,0,0,0,0,0,0]
# [4,3,3,0,0,0,0,0,0,0]
# [8,2,0,0,0,0,0,0,0,0]
# [7,3,0,0,0,0,0,0,0,0]
# [6,4,0,0,0,0,0,0,0,0]
# [5,5,0,0,0,0,0,0,0,0]






def sum_counter(n):
    t = 0
    s = [1]*n
    l = len(s)
    while l>2:
        if s.count(1) == l:
            n -= 1
            if n < 2:
                break
            s = [1]*n
        
            
# n = [N-a,...,1*a] :: sum(n) = N

a = [
 [1,1,1,1,1,1,1,1,1,1],
 [2,1,1,1,1,1,1,1,1,0],
 [3,1,1,1,1,1,1,1,0,0],
 [4,1,1,1,1,1,1,0,0,0],
 [5,1,1,1,1,1,0,0,0,0],
 [6,1,1,1,1,0,0,0,0,0],
 [7,1,1,1,0,0,0,0,0,0],
 [8,1,1,0,0,0,0,0,0,0],
 [9,1,0,0,0,0,0,0,0,0],
 [2,2,1,1,1,1,1,1,0,0],
 [3,2,1,1,1,1,1,0,0,0],
 [2,2,2,1,1,1,1,0,0,0],
 [4,2,1,1,1,1,0,0,0,0],
 [3,3,1,1,1,1,0,0,0,0],
 [3,2,2,1,1,1,0,0,0,0],
 [2,2,2,2,1,1,0,0,0,0],
 [5,2,1,1,1,0,0,0,0,0],
 [4,3,1,1,1,0,0,0,0,0],
 [4,2,2,1,1,0,0,0,0,0],
 [3,3,2,1,1,0,0,0,0,0],
 [3,2,2,2,1,0,0,0,0,0],
 [2,2,2,2,2,0,0,0,0,0],
 [6,2,1,1,0,0,0,0,0,0],
 [5,3,1,1,0,0,0,0,0,0],
 [5,2,2,1,0,0,0,0,0,0],
 [4,3,2,1,0,0,0,0,0,0],
 [4,2,2,2,0,0,0,0,0,0],
 [3,3,3,1,0,0,0,0,0,0],
 [3,3,2,2,0,0,0,0,0,0],
 [7,2,1,0,0,0,0,0,0,0],
 [6,3,1,0,0,0,0,0,0,0],
 [6,2,2,0,0,0,0,0,0,0],
 [5,4,1,0,0,0,0,0,0,0],
 [5,3,2,0,0,0,0,0,0,0],
 [4,4,2,0,0,0,0,0,0,0],
 [4,3,3,0,0,0,0,0,0,0],
 [8,2,0,0,0,0,0,0,0,0],
 [7,3,0,0,0,0,0,0,0,0],
 [6,4,0,0,0,0,0,0,0,0],
 [5,5,0,0,0,0,0,0,0,0]]


def even(x):
	for i in range(len(x)-1):
		for j in range(i, len(x)-1):
			if x[i] - x[j] > 1:
				return False
	return True

N = 10

S = []
s = [0]*N
s[0] = N
t = [0]*N

index = 2
total = 0

while s[-1] != 1:
	for i in range(1,index):
		s[0] -= 1
		s[i] += 1
	total += 1
	S.append([k for k in s])
	while not even(s[:index]):
		i = 0
		while i < index:
			for j in range(i+1, index):
				if s[i] - s[j] > 1:
					s[i] -= 1
					s[j] += 1
					total += 1
					S.append([k for k in s])
					i = -1 
					break
			i += 1
	if s[-1] != 1:
		s = [0]*N
		s[0] = N
		index += 1

found = False
print 
print
for i in a:
	found = False
	for k in S:
		for j in range(len(k)):
			if k[j] != i[j]:
				found = False
				break
			found = True
		if found:
			break
	if not found:
		print i

print		
for i in S:
	print i

print total
